<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <PackageId>ActionConditionalChecker.Services.InMemory</PackageId>
    <Version>7.0.0</Version>
    <Authors>Ganușceac Vlad</Authors>
    <Product>ActionConditionalChecker.Services.InMemory</Product>
    <Title>ActionConditionalChecker.Services.InMemory</Title>
    <Description>
      Implements contracts for both synchronous and asynchronous condition checkers in order to find out if the action may be executed under specific circumstances.
      The corresponding conditions/rules are persisted into a blocking collection and are available till the persisted request/action has been terminated.
    </Description>
    <RepositoryUrl>https://github.com/VladGanuscheak/ActionConditionalChecker.Services.InMemory</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>actionconditionalchecker;concurrent;utility;contracts;inmemory;.net;dotnet;c#</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>logo.png</PackageIcon>
    <PackageIconUrl />
    <PackageReleaseNotes>Migrated to .Net 7.0</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\logo.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="ActionConditionalChecker.Contracts" Version="7.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="7.0.0" />
  </ItemGroup>

</Project>
